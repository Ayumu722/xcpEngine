#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################


###################################################################
# Check and log all XCP Engine dependencies
###################################################################





###################################################################
# Verify that all dependencies are installed.
# Obtain version information for all dependencies.
###################################################################
dc_FAIL=0
echo ""; echo "...Checking general dependencies..."

###################################################################
# AFNI
###################################################################
ver_AFNI=$(${AFNI_PATH}/afni -ver 2>/dev/null|head -n1)
if [[ -z ${ver_AFNI} ]]
   then
   echo \
   "
   ::Dependencies check failed: AFNI
   ::Please install AFNI and ensure that it has been added to your path
   "
   dc_FAIL=1
else
   ver_AFNI=" * ${ver_AFNI}"
   echo "${ver_AFNI}"
fi

###################################################################
# ANTs
###################################################################
ver_ANTS=$(grep -i _GIT_VERSION_HASH ${ANTSPATH}/../ANTS-build/ProjectSourceVersionVars.cmake 2>/dev/null|cut -d'"' -f2)
if [[ -z ${ver_ANTS} ]]
   then
   echo \
   "
   ::Dependencies check failed: ANTs
   ::Please install ANTs and ensure that it has been added to your path
   "
   dc_FAIL=1
else
   ver_ANTS=" * Version ANTs "${ver_ANTS}
   echo "${ver_ANTS}"
fi

###################################################################
# FSL
###################################################################
ver_FSL=$(command -v ${FSLDIR}/bin/fsl 2>/dev/null|rev|cut -d"/" -f3|rev)
if [[ -z ${ver_FSL} ]]
   then
   echo \
   "
   ::Dependencies check failed: FSL
   ::Please install FSL and ensure that it has been added to your path
   "
   dc_FAIL=1
else 
   ver_FSL=" * Version FSL ${ver_FSL}"
   echo "${ver_FSL}"
fi

###################################################################
# C3D
###################################################################
ver_C3D=$(${C3D_PATH}/c3d -version 2>/dev/null|awk '{print $2}')
if [[ -z ${ver_C3D} ]]
   then
   echo \
   "
   ::Dependencies check failed: Convert3D
   ::Please install C3D and ensure that it has been added to your path
   "
   dc_FAIL=1
else
   ver_C3D=" * Version C3D ${ver_C3D}"
   echo "${ver_C3D}"
fi

###################################################################
# XCP
###################################################################
ver_XCP=" * Version XCP Engine  "$(cat ${XCPEDIR}/core/VERSION \
   2>/dev/null)
echo "${ver_XCP}"

###################################################################
# R
###################################################################
ver_R=$(R --version 2>/dev/null|grep -i "R version")
if [[ -z ${ver_R} ]]
   then
   echo \
   "
   ::Dependencies check failed: R
   ::Please install R and ensure that it has been added to your path
   "
   dc_FAIL=1
else
   ver_R=" * ${ver_R}"
   echo "${ver_R}"
fi

###################################################################
# Rscript
###################################################################
ver_RSCRIPT=$(Rscript --version 2>&1 >/dev/null)
if [[ -z ${ver_RSCRIPT} ]]
   then
   echo \
   "
   ::Dependencies check failed: Rscript
   ::Please install Rscript and ensure that it has been added to your path
   "
   dc_FAIL=1
else
   ver_RSCRIPT=" * ${ver_RSCRIPT}"
   echo "${ver_RSCRIPT}"
fi

###################################################################
# SGE
###################################################################
if [[ ${mode} == c ]] && [[ -z $(command -v qsub 2>/dev/null) ]]
   then
   echo \
   "
   ::Dependencies check failed: grid engine
   ::Please install a grid engine or use serial execution
   "
   dc_FAIL=1
fi

###################################################################
# R packages
###################################################################
RpackageChk=$(${XCPEDIR}/core/checkRpackageDependencies.R)
echo "${RpackageChk}"
[[ ! -z $(echo ${RpackageChk}|grep -i failed) ]] \
   && dc_FAIL=1

[[ ${dc_FAIL} == 1 ]] && echo "Aborting" && echo "" && exit 1
echo " * All general dependencies are present."





###################################################################
# Ensure environment variables are defined
###################################################################
echo "...Checking environment..."

###################################################################
# FSL
###################################################################
if [[ -z ${FSLDIR} ]]
   then
   echo \
   "
   ::Environment check failed: FSLDIR not set
   ::Please add FSLDIR to your environment
   "
   ec_FAIL=1
fi

###################################################################
# ANTs
###################################################################
if [[ -z ${ANTSPATH} ]]
   then
   echo \
   "
   ::Environment check failed: ANTSPATH not set
   ::Please add ANTSPATH to your environment
   "
   ec_FAIL=1
fi

###################################################################
# C3D
###################################################################
if [[ -z ${C3D_PATH} ]]
   then
   echo \
   "
   ::Environment check failed: C3D_PATH not set
   ::Please add C3D_PATH to your environment
   "
   ec_FAIL=1
fi

###################################################################
# XCP
###################################################################
if [[ -z ${XCPEDIR} ]]
   then
   echo \
   "
   ::Environment check failed: XCPEDIR not set
   ::Please add XCPEDIR to your environment
   "
   ec_FAIL=1
fi

[[ ${ec_FAIL} == 1 ]] && echo "Aborting" && echo "" && exit 2
echo " * All environmental variables are defined."





###################################################################
# Finally, ensure that any module-specific prerequisites are
# installed. (This will probably be executed only from within
# the XCP Engine.)
###################################################################
modreqs="...Checking module-specific dependencies..."
for module in ${modules}
   do
   reqpath=${XCPEDIR}/modules/${module}/${module}.req
   if [[ -e ${reqpath} ]]
      then
      source ${reqpath}
   fi
done
echo \
"
${modreqs}
"
