#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# initialisation script for structural module
###################################################################

###################################################################
# global constants
###################################################################
readonly POSINT='^[0-9]+$'
readonly INT='^-?[0-9]+$'
readonly POSNUM='^[0-9]+([.][0-9]+)?$'
readonly NUM='^-?[0-9]+([.][0-9]+)?$'
readonly ALPHA='^[A-Za-z]+$'
readonly RED='\033[0;31m'
readonly CYA='\033[0;36m'
readonly LGR='\033[0;37m'
readonly RCL='\033[0m'

###################################################################
# If prompted for information, then return...
###################################################################
if [[ "$1" == "INFO" ]] ||  [[ "$1" == "info" ]]
   then
   echo ""
   echo -e "${CYA}PStructural${RCL}:"
   echo "This module will execute the ANTs Joint Label Fusion pipeline utilizing the OASIS30 data set"
   echo "with customiziable optioins for brain extraction and cohort selection"
   echo ""
   exit 0
fi
###################################################################
# Inputs:
# -d : design file
# -c : context in pipeline
# -o : old design file (optional)
###################################################################
while getopts "d:c:o:" OPTION
   do
   case $OPTION in
   d)
      design=${OPTARG}
      ;;
   o)
      old_design=${OPTARG}
      ;;
   c)
      cxt=${OPTARG}
      ! [[ ${cxt} =~ $POSINT ]] && ${XCPEDIR}/xcpModusage ini && exit
      ;;
   *)
      ${XCPEDIR}/xcpModusage ini
      exit
   esac
done
shift $((OPTIND-1))

[[ -z ${design} ]] && ${XCPEDIR}/xcpModusage ini && exit

source ${XCPEDIR}/modules/jlf/jlf.def $cxt
buffer=$design
[[ ! -z "${old_design}" ]] && source ${old_design}
design=$buffer
source $design

###################################################################
# The ugly while loop is necessary for the select options to update
# correctly
###################################################################
xst1=0
while [[ "$xst1" == "0" ]]
do

echo ""; echo ""
echo -e "${RED}______________________________________________________________${RCL}"
echo "M${cxt}"; echo ""; echo ""
echo -e "Welcome to ${RED}JLF${RCL} initialisation for the XCP Engine."
echo "Select a parameter to define."
echo -e "After selecting an item, enter ${RED}?${RCL} for additional information."

select option in \
   "JLF ANTs Path: ${newAntsPath[${cxt}]}" \
   "Keep JLF warps: ${keepJLFWarps[${cxt}]}" \
   "Perform brain extraction: ${jlfExtract[${cxt}]}" \
   "JLF Cohort: ${jlfCohort[${cxt}]}" \
   "Reset to default parameters." \
   "All parameters are correct."
   do
   case $REPLY in

   ################################################################
   # USER: JLF ANTs Path
   ################################################################
   1)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the PATH to the update path for the ANTs binary files "
         echo "for the JLF procedure."; echo ""
         read -p "" -e -i ${XCPEDIR} buffer
         ext=$(echo "$buffer"|cut -d"." -f1 --complement)
         if [[ -e "$buffer" ]]
            then
            newAntsPath[${cxt}]=$buffer
            echo "Update JLF specific ANTs binary values:"
            echo ${newAntsPath[${cxt}]}; echo ""
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo "Internal BBL exploration has found that the default ANTs build's ANTS registration impeded the JLF procedure."
	    echo "In order to circumvent this issue a new ANTS build was employed specific for the JLF procedure."
	    echo "Should a seperate ANTs build be employed for the JLF pipeline update it here."
            echo "."
            echo ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: Keep JLF warped images
   ################################################################
   2)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Should JLF warped images be kept? 1|0: "\
            -e -i ${keepJLFWarps[${cxt}]} buffer
         if [[ $buffer =~ $NUM ]]
            then
            keepJLFWarps[${cxt}]=$buffer
            echo "Keep JLF warp selection: ${keepJLFWarps[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "A value used to determine if the temporary warped images from the JLF pipeline should be kept."
	    echo -e "A 1 indicates that warped images will be retained."
	    echo  ""
            echo -e "The value should be a 0 or 1"
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: Perform BE on input JLF image
   ################################################################
   3)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Should JLF perform BE on input to JLF pipeline? 1|0: "\
            -e -i ${jlfExtract[${cxt}]} buffer
         if [[ $buffer =~ $NUM ]]
            then
            jlfExtract[${cxt}]=$buffer
            echo "Keep JLF warp selection: ${jlfExtract[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "A value used to determine if the input to the JLF pipeline should be brain extracted."
	    echo -e "A 1 indicates the input image has been brain extracted"
	    echo  ""
            echo -e "The value should be a 0 or 1"
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: JLF Cohort selection
   ################################################################
   4)
      #############################################################
      # Identify the cohort to be used for the JLF labeleing procedure
      #############################################################
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Specify the cohort for the labeling procedure to be used"
      echo "Permitted codes include:"
      echo -e "${CYA} *${RCL} YoungAdult22"
      echo -e "${CYA} *${RCL} Older18"
      echo -e "${CYA} *${RCL} SexBalanced20"
      echo -e "${CYA} *${RCL} Subset24"
      echo -e "${CYA} *${RCL} Younger24"
      echo -e "${CYA} *${RCL} All"
      echo ""
      echo "For more demographic information"
      echo "Look in ${XCPEDIR}/thirdparty/oasis30/Cohorts/subjectDemographics"
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the cohort: "\
            -e -i ${jlfCohort[${cxt}]} buffer
          echo "Verifying code is valid: $buffer"
	  fileValue=$(ls ${XCPEDIR}/thirdparty/oasis30/Cohorts/${buffer})
	    if [[ ! -f ${fileValue} ]]
	      then
	      echo "Code not found in acceptable strings"
	      echo "Please enter one of the following cohorts:"
	      echo "YoungAdult22 | Older18 | SexBalanced20 | Subset24 | Younger24 | All" 	     
	    elif [[ -f ${fileValue} ]]
	        then
                jlfCohort[${cxt}]=${buffer}
	        xst2=1 
           elif [[ "${buffer}" == "m" ]]
            then
            break 2
           else
            echo ""
            echo -e "${CYA}The cohort should a string of characters"
            echo "which indiciates which subset of OASIS "
            echo "labels to use in order to label the input image."
            echo ""
            echo "Permitted codes include:"
            echo -e "${CYA} *${RCL} YoungAdult22"
            echo -e "${CYA} *${RCL} Older18"
            echo -e "${CYA} *${RCL} SexBalanced20"
            echo -e "${CYA} *${RCL} Subset24"
            echo -e "${CYA} *${RCL} Younger24"
            echo -e "${CYA} *${RCL} All"
            echo ""
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: Reset default parameters
   ################################################################
   5)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Default parameters reset."
      source ${XCPEDIR}/modules/jlf/jlf.def $cxt
      break
      ;;
      
   ################################################################
   # USER: All parameters are correct
   ################################################################
   6)
      xst1=1
      break
      ;;
      
   *)
      echo -e "${RED}Invalid option specified. Enter the number"
      echo -e "corresponding to the appropriate option.${RCL}"
      $0 INFO
      ;;
      
   esac
done
done

###################################################################
# write parameters to design file
###################################################################
echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
echo -e "${CYA}Writing user specifications to design file...${RCL}"

echo "" >> $design
echo "###################################################################" >> $design
echo "# ${cxt} JLF" >> $design
echo "###################################################################" >> $design
echo "" >> $design
echo "newAntsPath[${cxt}]=${newAntsPath[${cxt}]}" >> $design
echo "keepJLFWarps[${cxt}]=${keepJLFWarps[${cxt}]}" >> $design
echo "jlfExtract[${cxt}]=${jlfExtract[${cxt}]}" >> $design
echo "jlfCohort[${cxt}]=${jlfCohort[${cxt}]}" >> $design
