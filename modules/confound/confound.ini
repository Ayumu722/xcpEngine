#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# initialisation script for confound regression
###################################################################

###################################################################
# global constants
###################################################################
readonly POSINT='^[0-9]+$'
readonly INT='^-?[0-9]+$'
readonly POSNUM='^[0-9]+([.][0-9]+)?$'
readonly NUM='^-?[0-9]+([.][0-9]+)?$'
readonly ALPHA='^[A-Z]+$'
readonly RED='\033[0;31m'
readonly CYA='\033[0;36m'
readonly LGR='\033[0;37m'
readonly RCL='\033[0m'

###################################################################
# If prompted for information, then return...
###################################################################
if [[ "$1" == "INFO" ]]
   then
   echo ""
   echo -e "${CYA}CONFOUND${RCL}:"
   echo "This module models artefactual signals present in a 4D "
   echo "image. The confound model created by this module can be "
   echo "used to mitigate effects of subject motion by residualising "
   echo "the 4D image with respect to the confound model. (This "
   echo "functionality is managed separately in the REGRESS module.) "
   echo "Several types of artefact can be modelled: physiological "
   echo "sources, including white matter and CSF signals; global "
   echo "signal; realignment parameters; and CompCor. Derivatives "
   echo "and squares can also be added to the confound model, as can "
   echo "signal during prior time points."
   echo ""
   echo "If you wish to include confounds based on segmentation of "
   echo "T1-weighted tissue, you must run COREG first."
   echo ""
   exit 0
fi

###################################################################
# Inputs:
# -d : design file
# -c : context in pipeline
# -o : old design file (optional)
###################################################################
while getopts "d:c:o:" OPTION
   do
   case $OPTION in
   d)
      design=${OPTARG}
      ;;
   o)
      old_design=${OPTARG}
      ;;
   c)
      cxt=${OPTARG}
      ! [[ ${cxt} =~ $POSINT ]] && ${XCPEDIR}/xcpModusage ini && exit
      ;;
   *)
      ${XCPEDIR}/xcpModusage ini
      exit
   esac
done
shift $((OPTIND-1))

[[ -z ${design} ]] && ${XCPEDIR}/xcpModusage ini && exit

source ${XCPEDIR}/modules/confound/confound.def $cxt
buffer=$design
[[ ! -z "${old_design}" ]] && source ${old_design}
design=$buffer
source $design

################################################################### 
# override defaults if structural path is specified
################################################################### 
if [[ ! -z "${xstruct}" ]]
then
confound_gm_path[${cxt}]=$(ls -d1 $xstruct\
   |rev\
   |cut -d"/" -f1 --complement\
   |rev)
confound_wm_path[${cxt}]=$(ls -d1 $xstruct\
   |rev\
   |cut -d"/" -f1 --complement\
   |rev)
confound_csf_path[${cxt}]=$(ls -d1 $xstruct\
   |rev\
   |cut -d"/" -f1 --complement\
   |rev)
fi

###################################################################
# ..or if the ANTsCT directory is specified, then automatically
# fill segmentation information from the ANTsCT directory.
###################################################################
if [[ ! -z "${xants}" ]]
   then
   confound_gm_path[${cxt}]=$(\ls ${xants}/*BrainSegmentation.*)
   confound_gm_val[${cxt}]=2,4
   confound_wm_path[${cxt}]=$(\ls ${xants}/*BrainSegmentation.*)
   confound_wm_val[${cxt}]=3
   confound_csf_path[${cxt}]=$(\ls ${xants}/*BrainSegmentation.*)
   confound_csf_val[${cxt}]=1
fi

################################################################### 
# The ugly while loop is necessary for the select options to update
# correctly
################################################################### 
xst1=0
while [[ "$xst1" == "0" ]]
do

echo ""; echo ""
echo -e "${RED}______________________________________________________________${RCL}"
echo "M${cxt}"; echo ""; echo ""
echo -e "Welcome to ${RED}confound${RCL} model initialisation for the XCP "
echo "Engine. Select a parameter to define."
echo -e "After selecting an item, enter ${RED}?${RCL} for additional information."

select option in \
   "Realignment parameters: ${confound_rp[${cxt}]}" \
   "Relative RMS displacement: ${confound_rms[${cxt}]}" \
   "Grey matter mean: ${confound_gm[${cxt}]}" \
   "White matter mean: ${confound_wm[${cxt}]}" \
   "Cerebrospinal fluid mean: ${confound_csf[${cxt}]}" \
   "Mean global signal: ${confound_gsr[${cxt}]}" \
   "tCompCor components: ${confound_cc[${cxt}]}" \
   "Previous time points: ${confound_past[${cxt}]}" \
   "Derivatives: ${confound_dx[${cxt}]}" \
   "Powers: ${confound_sq[${cxt}]}" \
   "Custom nuisance timeseries: ${confound_custom[${cxt}]}" \
   "Re-run: ${confound_rerun[${cxt}]}" \
   "Delete intermediate files: ${confound_cleanup[${cxt}]}" \
   "Reset to default parameters." \
   "All parameters are correct."
   do
   case $REPLY in
   
   ################################################################
   # USER: Realignment parameters
   ################################################################
   1)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include REALIGNMENT PARAMETERS in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Realignment parameters
         #        -> Yes
         ##########################################################
         1)
            confound_rp[${cxt}]="Y"
            echo "Realignment parameters: ${confound_rp[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Realignment parameters
         #        -> No
         ##########################################################
         2)
            confound_rp[${cxt}]="N"
            echo "Realignment parameters: ${confound_rp[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Realignment parameters
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Realignment parameters
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}Early models that attempted to correct for the introduction "
            echo "of spurious variance by the movement of subjects in the "
            echo "scanner did so by regressing out the 6 parameters (3 "
            echo "translational, 3 rotational) used to realign each volume in "
            echo -e "the timeseries to a reference volume.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
   
   ################################################################
   # USER: Relative RMS displacement
   ################################################################
   2)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include RELATIVE RMS DISPLACEMENT in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Relative RMS displacement
         #        -> Yes
         ##########################################################
         1)
            confound_rms[${cxt}]="Y"
            echo "Relative RMS displacement: ${confound_rms[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Relative RMS displacement
         #        -> No
         ##########################################################
         2)
            confound_rms[${cxt}]="N"
            echo "Relative RMS displacement: ${confound_rms[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Relative RMS displacement
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Relative RMS displacement
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}The relative root-mean-square displacement for each "
            echo "volume is computed as the square root of the mean of "
            echo "the temporal derivatives of the 6 realignment parameters "
            echo -e "squared.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
      
   ################################################################
   # USER: Grey matter mean
   ################################################################
   3)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include the mean GREY MATTER signal in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No" \
         "Use aCompCor instead"
         do
         case $REPLY in
         ##########################################################
         # USER: Grey matter mean
         #        -> Yes
         ##########################################################
         1)
            confound_gm[${cxt}]="Y"
            echo "Grey matter mean: ${confound_gm[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Grey matter mean
         #        -> No
         ##########################################################
         2)
            confound_gm[${cxt}]="N"
            echo "Grey matter mean: ${confound_gm[${cxt}]}"
            break 2
            ;;
         ##########################################################
         # USER: Grey matter mean
         #        -> Use aCompCor instead
         ##########################################################
         3)
            buffer1=${confound_gm[${cxt}]}
            confound_gm[${cxt}]=acc
            echo "Using aCompCor to extract principal components "
            echo "from GM..."
            break
            ;;
         ##########################################################
         # USER: Grey matter mean
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Grey matter mean
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}Tissue-based nuisance regressors are capable of reducing "
            echo "the influence of subject movement (as well as physiological "
            echo "artefacts) on the data. Mean white matter and cerebrospinal "
            echo "fluid signal are most often used to this end (e.g., "
            echo "Windischberger et al., 2002; Satterthwaite et al., 2012)."
            echo "This option will require a segmentation of the subject's "
            echo "anatomical/structual image according to tissue class."
            echo ""
            echo -e "${RED}For advanced users${CYA}: The XCP Engine's confound module offers "
            echo "the option of including up to three tissue- or RoI-based "
            echo "regressors. While nominally these are the mean GM, WM, and "
            echo "CSF timeseries, it is possible to include mean signals from "
            echo -e "any three RoIs for which a binary mask is available.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      #############################################################
      # USER: Grey matter mean
      #        -> Yes
      #        ...aCompCor
      #############################################################
      while [[ ${confound_gm[${cxt}]} == acc ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the number of aCOMPCOR GM components to include: "\
            -e -i 5 buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_gm[${cxt}]=$buffer
            echo "aCompCor GM components: ${confound_gm[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_gm[${cxt}]=${buffer1}
            break 2
         else
            echo -e "${CYA}"
            echo "The aCompCor approach (Behzadi et al., 2007) extracts "
            echo "signals of no interest from aantomical compartments using "
            echo "principal component analysis (PCA). These noise components "
            echo "are then added to the nuisance model."
            echo ""
            echo "Note: This option enables the anatomical CompCor approach. "
            echo "To use the temporal variance-based CompCor approach "
            echo "instead, select tCompCor from the main menu."
            echo -e "${RCL}"
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: Grey matter mean
      #        -> Yes
      #        ...segmentation
      #############################################################
      xst2=0
      if [[ -z "$segdir" ]]
         then segdir=${confound_gm_path[${cxt}]}
      fi
      if [[ $(imtest ${confound_gm_path[${cxt}]}) != "1" ]]
         then
         buffer=$segdir
      else
         buffer=${confound_gm_path[${cxt}]}
      fi
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Select the path to a volume containing GREY MATTER SEGMENTATION"
         echo "for subject ((${xsubj})): "
         read -p ""\
            -e -i $buffer buffer
         if [[ $(imtest $buffer) == "1" ]]
            then
            segdir=$( ls -d1 ${buffer} |rev|cut -d"/" -f1 --complement|rev)
            confound_gm_path[${cxt}]=$buffer
            echo "Path to GM segmentation: ${confound_gm_path[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_gm[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}Including mean tissue timeseries as nuisance regressors "
            echo "requires a known segmentation of the structural image into "
            echo "tissue classes. If you provided an output directory from the "
            echo "ANTsCT routine, then a segmentation will automatically be "
            echo -e "provided.${RCL}"
            echo ""
            echo "The input must be a path to an image."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: Grey matter mean
      #        -> Yes
      #        ...value in segmentation
      #############################################################
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the VALUE(s) corresponding to grey matter in"
         echo "the segmentation. If all nonzero voxels correspond to"
         echo "grey matter, enter ALL. To preview the image, enter"
         echo "VIEW."
         read -p ""\
            -e -i ${confound_gm_val[${cxt}]} buffer
         element1=$(echo ${buffer}|cut -d"," -f1| cut -d":" -f1)
         if [[ $buffer == "ALL" ]]
            then
            confound_gm_val[${cxt}]=all
            echo "All nonzero voxels in the target image correspond"
            echo "to grey matter. The image will only be binarised"
            echo "prior to timeseries extraction."
            xst2=1
         elif [[ $buffer == "VIEW" ]]
            then
            echo "Opening target image for viewing..."
            fslview ${confound_gm_path[${cxt}]} &
         elif [[ $element1 =~ $NUM ]]
            then
            confound_gm_val[${cxt}]=$buffer
            echo "Grey matter voxel value set to ${confound_gm_val[${cxt}]}."
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_gm[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}In some segmentations, such as the one output by "
            echo "ANTs Cortical Thickness, each tissue class is assigned "
            echo "a different intensity value in the segmentation volume. "
            echo "For instance, 1 might correspond to CSF, 2 to cortical "
            echo "grey matter, 3 to white matter, etc. If your "
            echo "segmentation is strictly a binary-valued white matter "
            echo -e "mask, then enter ${RED}ALL${CYA}. If you are not sure, you can view "
            echo -e "the segmentation by entering ${RED}VIEW${CYA}. To enter a "
            echo "range of values, use the colon (:) operator; to enter "
            echo "multiple values, use the comma (,) operator. For instance, "
            echo "1:5,9 would indicate all values in the interval [1,5] "
            echo -e "as well as 9${RCL}."
            echo ""
            echo "The input must either be numeric or one of the"
            echo "case-sensitive strings ALL or VIEW."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      xst2=0
      #############################################################
      # USER: Grey matter mean
      #        -> Yes
      #        ...erosion
      #############################################################
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the number of iterations of EROSION to be"
         echo "applied to the grey matter mask prior to extraction"
         echo "of a mean timeseries."
         read -p "" -e -i ${confound_gm_ero[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_gm_ero[${cxt}]=$buffer
            echo "Erosion iterations, GM mask: ${confound_gm_ero[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_gm_ero[${cxt}]=0
            break 2
         else
            echo -e "${CYA}In order to ensure that the signal extracted from the "
            echo "tissue or region of interest is not mixed with signal "
            echo "from adjacent voxels associated with a different tissue "
            echo "class, it is possible to erode its mask by removing "
            echo "fringe voxels. An optimal degree of erosion will result "
            echo "in a mask comprising 'deep' voxels of the tissue, while "
            echo "excessive erosion may result in a mask whose extent is "
            echo -e "poorly representative of the tissue.${RCL}"
            echo ""
            echo "Enter 0 for no erosion."
            echo ""
            echo -e "${CYA}If the selected number of erosion iterations"
            echo "results in an empty mask, progressively fewer"
            echo "erosions will be applied until the mask is"
            echo -e "non-empty.${RCL}"
            echo ""
            echo -e "The input must be nonnegative numeric."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: White matter mean
   ################################################################
   4)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include the mean WHITE MATTER signal in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No" \
         "Use aCompCor instead"
         do
         case $REPLY in
         ##########################################################
         # USER: White matter mean
         #        -> Yes
         ##########################################################
         1)
            confound_wm[${cxt}]="Y"
            echo "White matter mean: ${confound_wm[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: White matter mean
         #        -> No
         ##########################################################
         2)
            confound_wm[${cxt}]="N"
            echo "White matter mean: ${confound_wm[${cxt}]}"
            break 2
            ;;
         ##########################################################
         # USER: White matter mean
         #        -> Use aCompCor instead
         ##########################################################
         3)
            buffer1=${confound_wm[${cxt}]}
            confound_wm[${cxt}]=acc
            echo "Using aCompCor to extract principal components "
            echo "from WM..."
            break
            ;;
         ##########################################################
         # USER: White matter mean
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: White matter mean
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}Tissue-based nuisance regressors are capable of reducing "
            echo "the influence of subject movement (as well as physiological "
            echo "artefacts) on the data. Mean white matter and cerebrospinal "
            echo "fluid signal are most often used to this end (e.g., "
            echo "Windischberger et al., 2002; Satterthwaite et al., 2012)."
            echo "This option will require a segmentation of the subject's "
            echo "anatomical/structual image according to tissue class."
            echo ""
            echo -e "${RED}For advanced users${CYA}: The XCP Engine's confound module offers "
            echo "the option of including up to three tissue- or RoI-based "
            echo "regressors. While nominally these are the mean GM, WM, and "
            echo "CSF timeseries, it is possible to include mean signals from "
            echo -e "any three RoIs for which a binary mask is available.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      #############################################################
      # USER: White matter mean
      #        -> Yes
      #        ...aCompCor
      #############################################################
      while [[ ${confound_wm[${cxt}]} == acc ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the number of aCOMPCOR WM components to include: "\
            -e -i 5 buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_wm[${cxt}]=$buffer
            echo "aCompCor WM components: ${confound_wm[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_wm[${cxt}]=${buffer1}
            break 2
         else
            echo -e "${CYA}"
            echo "The aCompCor approach (Behzadi et al., 2007) extracts "
            echo "signals of no interest from aantomical compartments using "
            echo "principal component analysis (PCA). These noise components "
            echo "are then added to the nuisance model."
            echo ""
            echo "Note: This option enables the anatomical CompCor approach. "
            echo "To use the temporal variance-based CompCor approach "
            echo "instead, select tCompCor from the main menu."
            echo -e "${RCL}"
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: White matter mean
      #        -> Yes
      #        ...segmentation
      #############################################################
      xst2=0
      if [[ -z "$segdir" ]]
         then segdir=${confound_wm_path[${cxt}]}
      fi
      if [[ $(imtest ${confound_wm_path[${cxt}]}) != "1" ]]
         then
         buffer=$segdir
      else
         buffer=${confound_wm_path[${cxt}]}
      fi
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Select the path to a volume containing WHITE MATTER SEGMENTATION"
         echo "for subject ((${xsubj})): "
         read -p ""\
            -e -i $buffer buffer
         if [[ $(imtest $buffer) == "1" ]]
            then
            segdir=$( ls -d1 ${buffer} |rev|cut -d"/" -f1 --complement|rev)
            confound_wm_path[${cxt}]=$buffer
            echo "Path to WM segmentation: ${confound_wm_path[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_wm[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}Including mean tissue timeseries as nuisance regressors "
            echo "requires a known segmentation of the structural image into "
            echo "tissue classes. If you provided an output directory from the "
            echo "ANTsCT routine, then a segmentation will automatically be "
            echo -e "provided.${RCL}"
            echo ""
            echo "The input must be a path to an image."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: White matter mean
      #        -> Yes
      #        ...value in segmentation
      #############################################################
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the value(s) corresponding to white matter in"
         echo "the segmentation. If all nonzero voxels correspond to"
         echo "white matter, enter ALL. To preview the image, enter"
         echo "VIEW."
         read -p ""\
            -e -i ${confound_wm_val[${cxt}]} buffer
         element1=$(echo ${buffer}|cut -d"," -f1| cut -d":" -f1)
         if [[ $buffer == "ALL" ]]
            then
            confound_wm_val[${cxt}]=all
            echo "All nonzero voxels in the target image correspond"
            echo "to white matter. The image will only be binarised"
            echo "prior to timeseries extraction."
            xst2=1
         elif [[ $buffer == "VIEW" ]]
            then
            echo "Opening target image for viewing..."
            fslview ${confound_wm_path[${cxt}]} &
         elif [[ $element1 =~ $NUM ]]
            then
            confound_wm_val[${cxt}]=$buffer
            echo "White matter voxel value set to ${confound_wm_val[${cxt}]}."
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_wm[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}In some segmentations, such as the one output by "
            echo "ANTs Cortical Thickness, each tissue class is assigned "
            echo "a different intensity value in the segmentation volume. "
            echo "For instance, 1 might correspond to CSF, 2 to cortical "
            echo "grey matter, 3 to white matter, etc. If your "
            echo "segmentation is strictly a binary-valued white matter "
            echo -e "mask, then enter ${RED}ALL${CYA}. If you are not sure, you can view "
            echo -e "the segmentation by entering ${RED}VIEW${CYA}. To enter a "
            echo "range of values, use the colon (:) operator; to enter "
            echo "multiple values, use the comma (,) operator. For instance, "
            echo "1:5,9 would indicate all values in the interval [1,5] "
            echo -e "as well as 9${RCL}."
            echo ""
            echo "The input must either be numeric or one of the"
            echo "case-sensitive strings ALL or VIEW."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: White matter mean
      #        -> Yes
      #        ...erosion
      #############################################################
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the number of iterations of EROSION to be"
         echo "applied to the white matter mask prior to extraction"
         echo "of a mean timeseries."
         read -p "" -e -i ${confound_wm_ero[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_wm_ero[${cxt}]=$buffer
            echo "Erosion iterations, WM mask: ${confound_wm_ero[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_wm_ero[${cxt}]=0
            break 2
         else
            echo -e "${CYA}In order to ensure that the signal extracted from the "
            echo "tissue or region of interest is not mixed with signal "
            echo "from adjacent voxels associated with a different tissue "
            echo "class, it is possible to erode its mask by removing "
            echo "fringe voxels. An optimal degree of erosion will result "
            echo "in a mask comprising 'deep' voxels of the tissue, while "
            echo "excessive erosion may result in a mask whose extent is "
            echo -e "poorly representative of the tissue.${RCL}"
            echo ""
            echo "Enter 0 for no erosion."
            echo ""
            echo -e "${CYA}If the selected number of erosion iterations"
            echo "results in an empty mask, progressively fewer"
            echo "erosions will be applied until the mask is"
            echo -e "non-empty.${RCL}"
            echo ""
            echo -e "The input must be nonnegative numeric."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Cerebrospinal fluid mean
   ################################################################
   5)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include the mean CEREBROSPINAL FLUID signal in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No" \
         "Use aCompCor instead"
         do
         case $REPLY in
         ##########################################################
         # USER: Cerebrospinal fluid mean
         #        -> Yes
         ##########################################################
         1)
            confound_csf[${cxt}]="Y"
            echo "Cerebrospinal fluid mean: ${confound_csf[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Cerebrospinal fluid mean
         #        -> No
         ##########################################################
         2)
            confound_csf[${cxt}]="N"
            echo "Cerebrospinal fluid mean: ${confound_csf[${cxt}]}"
            break 2
            ;;
         ##########################################################
         # USER: Cerebrospinal fluid mean
         #        -> Use aCompCor instead
         ##########################################################
         3)
            buffer1=${confound_csf[${cxt}]}
            confound_csf[${cxt}]=acc
            echo "Using aCompCor to extract principal components "
            echo "from CSF..."
            break
            ;;
         ##########################################################
         # USER: Cerebrospinal fluid mean
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Cerebrospinal fluid mean
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}Tissue-based nuisance regressors are capable of reducing "
            echo "the influence of subject movement (as well as physiological "
            echo "artefacts) on the data. Mean white matter and cerebrospinal "
            echo "fluid signal are most often used to this end (e.g., "
            echo "Windischberger et al., 2002; Satterthwaite et al., 2012)."
            echo "This option will require a segmentation of the subject's "
            echo "anatomical/structual image according to tissue class. "
            echo "The anatomical CompCor approach (aCompCor, Muschelli et al., "
            echo "2014) uses principal component analysis (PCA) over the "
            echo "tissue mask to extract multiple timeseries for nuisance "
            echo "regression."
            echo ""
            echo -e "${RED}For advanced users${CYA}: The XCP Engine's confound module offers "
            echo "the option of including up to three tissue- or RoI-based "
            echo "regressors. While nominally these are the mean GM, WM, and "
            echo "CSF timeseries, it is possible to include mean signals from "
            echo -e "any three RoIs for which a binary mask is available.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      #############################################################
      # USER: Cerebrospinal fluid mean
      #        -> Yes
      #        ...aCompCor
      #############################################################
      while [[ ${confound_csf[${cxt}]} == acc ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the number of aCOMPCOR CSF components to include: "\
            -e -i 5 buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_csf[${cxt}]=$buffer
            echo "aCompCor CSF components: ${confound_csf[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_csf[${cxt}]=${buffer1}
            break 2
         else
            echo -e "${CYA}"
            echo "The aCompCor approach (Behzadi et al., 2007) extracts "
            echo "signals of no interest from aantomical compartments using "
            echo "principal component analysis (PCA). These noise components "
            echo "are then added to the nuisance model."
            echo ""
            echo "Note: This option enables the anatomical CompCor approach. "
            echo "To use the temporal variance-based CompCor approach "
            echo "instead, select tCompCor from the main menu."
            echo -e "${RCL}"
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: Cerebrospinal fluid mean
      #        -> Yes
      #        ...segmentation
      #############################################################
      xst2=0
      if [[ -z "$segdir" ]]
         then segdir=${confound_csf_path[${cxt}]}
      fi
      if [[ $(imtest ${confound_csf_path[${cxt}]}) != "1" ]]
         then
         buffer=$segdir
      else
         buffer=${confound_csf_path[${cxt}]}
      fi
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Select the path to a volume containing CSF SEGMENTATION"
         echo "for subject ((${xsubj})): "
         read -p ""\
            -e -i $buffer buffer
         if [[ $(imtest $buffer) == "1" ]]
            then
            segdir=$( ls -d1 ${buffer} |rev|cut -d"/" -f1 --complement|rev)
            confound_csf_path[${cxt}]=$buffer
            echo "Path to CSF segmentation: ${confound_csf_path[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_csf[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}Including mean tissue timeseries as nuisance regressors "
            echo "requires a known segmentation of the structural image into "
            echo "tissue classes. If you provided an output directory from the "
            echo "ANTsCT routine, then a segmentation will automatically be "
            echo -e "provided.${RCL}"
            echo ""
            echo "The input must be a path to an image."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: Cerebrospinal fluid mean
      #        -> Yes
      #        ...value in segmentation
      #############################################################
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the value(s) corresponding to CSF in the"
         echo "segmentation. If all nonzero voxels correspond to"
         echo "CSF, enter ALL. To preview the image, enter VIEW"
         read -p ""\
            -e -i ${confound_csf_val[${cxt}]} buffer
         element1=$(echo ${buffer}|cut -d"," -f1| cut -d":" -f1)
         if [[ $buffer == "ALL" ]]
            then
            confound_csf_val[${cxt}]=all
            echo "All nonzero voxels in the target image correspond"
            echo "to CSF. The image will only be binarised prior to"
            echo "timeseries extraction."
            xst2=1
         elif [[ $buffer == "VIEW" ]]
            then
            echo "Opening target image for viewing..."
            fslview ${confound_csf_path[${cxt}]} &
         elif [[ $element1 =~ $NUM ]]
            then
            confound_csf_val[${cxt}]=$buffer
            echo "CSF voxel value set to ${confound_csf_val[${cxt}]}."
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_csf[${cxt}]="N"
            break 2
         else
            echo -e "${CYA}In some segmentations, such as the one output by "
            echo "ANTs Cortical Thickness, each tissue class is assigned "
            echo "a different intensity value in the segmentation volume. "
            echo "For instance, 1 might correspond to CSF, 2 to cortical "
            echo "grey matter, 3 to white matter, etc. If your "
            echo "segmentation is strictly a binary-valued white matter "
            echo -e "mask, then enter ${RED}ALL${CYA}. If you are not sure, you can view "
            echo -e "the segmentation by entering ${RED}VIEW${CYA}. To enter a "
            echo "range of values, use the colon (:) operator; to enter "
            echo "multiple values, use the comma (,) operator. For instance, "
            echo "1:5,9 would indicate all values in the interval [1,5] "
            echo -e "as well as 9${RCL}."
            echo ""
            echo "The input must either be numeric or one of the"
            echo "case-sensitive strings ALL or VIEW."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      #############################################################
      # USER: Cerebrospinal fluid mean
      #        -> Yes
      #        ...erosion
      #############################################################
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the number of iterations of EROSION to be"
         echo "applied to the CSF mask prior to extraction"
         echo "of a mean timeseries."
         read -p "" -e -i ${confound_csf_ero[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_csf_ero[${cxt}]=$buffer
            echo "Erosion iterations, CSF mask: ${confound_csf_ero[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            confound_csf_ero[${cxt}]=0
            break 2
         else
            echo -e "${CYA}In order to ensure that the signal extracted from the "
            echo "tissue or region of interest is not mixed with signal "
            echo "from adjacent voxels associated with a different tissue "
            echo "class, it is possible to erode its mask by removing "
            echo "fringe voxels. An optimal degree of erosion will result "
            echo "in a mask comprising 'deep' voxels of the tissue, while "
            echo "excessive erosion may result in a mask whose extent is "
            echo -e "poorly representative of the tissue.${RCL}"
            echo ""
            echo "Enter 0 for no erosion."
            echo ""
            echo -e "${CYA}If the selected number of erosion iterations"
            echo "results in an empty mask, progressively fewer"
            echo "erosions will be applied until the mask is"
            echo -e "non-empty.${RCL}"
            echo ""
            echo -e "The input must be nonnegative numeric."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Mean global signal
   ################################################################
   6)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to include the mean GLOBAL SIGNAL in"
      echo "the confound matrix?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Mean global signal
         #        -> Yes
         ##########################################################
         1)
            confound_gsr[${cxt}]="Y"
            echo "Mean global signal: ${confound_gsr[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Mean global signal
         #        -> No
         ##########################################################
         2)
            confound_gsr[${cxt}]="N"
            echo "Mean global signal: ${confound_gsr[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Mean global signal
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Mean global signal
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}Removal of the mean signal across the entire brain is "
            echo "one of the simplest and most effective means of "
            echo "attenuating the influence of artefactual sources such "
            echo "as subject motion. While earlier studies suggested that "
            echo "global signal regression might be harmful, for instance "
            echo "by introducing artefactual anticorrelations (Murphy et al., "
            echo "2009) or group differences (Saad et al., 2012), an "
            echo "emerging consensus (e.g., Power et al., 2014; Chai et al., "
            echo "2012) suggests instead that it is an effective denoising "
            echo -e "technique.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
      
   ################################################################
   # USER: Compcor components
   ################################################################
   7)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the number of tCOMPCOR components to include: "\
            -e -i ${confound_cc[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_cc[${cxt}]=$buffer
            echo "CompCor components: ${confound_cc[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo -e "${CYA}"
            echo "The tCompCor approach (Behzadi et al., 2007) extracts "
            echo "signals of no interest from high-variance voxels using "
            echo "principal component analysis (PCA). These noise components "
            echo "are then added to the nuisance model."
            echo ""
            echo "Note: This option enables the temporal variance-based "
            echo "CompCor approach. To use the anatomical CompCor approach "
            echo "instead, select the compartment in which you wish to "
            echo "compute PCA-derived timeseries."
            echo -e "${RCL}"
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Previous time points
   ################################################################
   8)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the number of PREVIOUS TIME POINTS to include: "\
            -e -i ${confound_past[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_past[${cxt}]=$buffer
            echo "Previous time points: ${confound_past[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo -e "${CYA}Including forward-shifted realignment and nuisance "
            echo "timeseries in the nuisance model (Friston et al., 1996) "
            echo "provides a means of factoring in the subject's history "
            echo "of motion and for the lingering effects of motion, "
            echo "which may persist for upwards of 10 seconds following "
            echo "motion itself."
            echo ""
            echo "Derived timeseries are obtained in the following order:"
            echo -e "  ${RCL}1. ${RED}Previous time points"
            echo -e "  ${RCL}2. ${RED}Temporal derivatives"
            echo -e "  ${RCL}3. ${RED}Squares and higher powers"
            echo -e "${CYA}So, for instance, including the first temporal derivative "
            echo "in the confound model will also include the first "
            echo "derivative of any previous time points. Additionally "
            echo "including the second power will also include not only the "
            echo "squared timeseries, but also the squares of derivatives, "
            echo "squares of previous time points, and squares of "
            echo -e "derivatives of previous time points.${RCL}"
            echo ""
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Derivatives
   ################################################################
   9)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the maximum ORDER of DERIVATIVE to include: "\
            -e -i ${confound_dx[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_dx[${cxt}]=$buffer
            echo "Temporal derivatives: ${confound_dx[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo -e "${CYA}Temporal derivatives of motion parameters encode the "
            echo "relative displacement of the brain from one volume "
            echo "of a timeseries to the next; they are used in major "
            echo -e "confound models (e.g., Satterthwaite et al., 2012)"
            echo ""
            echo "Derived timeseries are obtained in the following order:"
            echo -e "  ${RCL}1. ${RED}Previous time points"
            echo -e "  ${RCL}2. ${RED}Temporal derivatives"
            echo -e "  ${RCL}3. ${RED}Squares and higher powers"
            echo -e "${CYA}So, for instance, including the first temporal derivative "
            echo "in the confound model will also include the first "
            echo "derivative of any previous time points. Additionally "
            echo "including the second power will also include not only the "
            echo "squared timeseries, but also the squares of derivatives, "
            echo "squares of previous time points, and squares of "
            echo -e "derivatives of previous time points.${RCL}"
            echo ""
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Powers
   ################################################################
   10)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the maximum POWER of timeseries to include: "\
            -e -i ${confound_sq[${cxt}]} buffer
         if [[ $buffer =~ $POSINT ]]
            then
            confound_sq[${cxt}]=$buffer
            echo "Powers: ${confound_sq[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo -e "${CYA}In addition to the first power of each confound, you "
            echo "may elect to include higher powers to account for "
            echo "potential noise that is proportional to squares or "
            echo "higher powers of motion parameters and nuisance "
            echo -e "regressors."
            echo ""
            echo "Set power to:"
            echo -e " ${RCL}0${CYA}: It is assumed that if you only wanted to demean "
            echo "    the timeseries, you would then use the demean/ "
            echo "    detrend option in prestats. The confound module "
            echo "    treats this the same as power 1."
            echo -e " ${RCL}1${CYA}: Include only the timeseries itself (as well as any "
            echo "    previous time points and derivatives requested."
            echo -e " ${RCL}2${CYA}: Include each timeseries and the timeseries squared."
            echo -e " ${RCL}3${CYA}: Include each timeseries, the timeseries squared, "
            echo "    and the timeseries cubed."
            echo "Powers greater than 3 are available without a ceiling, "
            echo "but every added power doubles the data's loss of temporal "
            echo "degrees of freedom."
            echo ""
            echo "Derived timeseries are obtained in the following order:"
            echo -e "  ${RCL}1. ${RED}Previous time points"
            echo -e "  ${RCL}2. ${RED}Temporal derivatives"
            echo -e "  ${RCL}3. ${RED}Squares and higher powers"
            echo -e "${CYA}So, for instance, including the first temporal derivative "
            echo "in the confound model will also include the first "
            echo "derivative of any previous time points. Additionally "
            echo "including the second power will also include not only the "
            echo "squared timeseries, but also the squares of derivatives, "
            echo "squares of previous time points, and squares of "
            echo -e "derivatives of previous time points.${RCL}"
            echo ""
            echo "Enter a non-negative integer."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   
   ################################################################
   # USER: Custom regressor timeseries
   ################################################################
   11)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         echo "Specify the PATH to any CUSTOM REGRESSOR timeseries "
         echo "for the current study."; echo ""
         read -p "" -e -i ${XCPEDIR} buffer
         ext=$(echo "$buffer"|cut -d"." -f1 --complement)
         if [[ -e "$buffer" ]]
            then
            confound_custom[${cxt}]=$buffer
            echo "Custom regressors selected:"
            echo ${confound_custom[${cxt}]}; echo ""
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo "The input must be a path to a matrix with regressors "
            echo "in columns and timepoints in rows."
            echo ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
      
   ################################################################
   # USER: Re-run
   ################################################################
   12)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to RE-RUN any completed steps?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Re-run
         #        -> Yes
         ##########################################################
         1)
            confound_rerun[${cxt}]="Y"
            echo "Re-run: ${confound_rerun[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Re-run
         #        -> No
         ##########################################################
         2)
            confound_rerun[${cxt}]="N"
            echo "Re-run: ${confound_rerun[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Re-run
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Re-run
         #        -> HELP
         ##########################################################
         *)
            echo ""
            echo -e "${CYA}Ordinarily, the XCP modules will detect whether "
            echo "a particular analysis has run to completion "
            echo "before beginning it. If re-running is disabled, "
            echo "then the XCP module will immediately skip to "
            echo "the next stage of analysis. Otherwise, any "
            echo -e "completed analyses will be repeated.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
   
   ################################################################
   # USER: Delete intermediate files
   ################################################################
   13)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to DELETE any outputs of INTERMEDIATE"
      echo "steps in the confound regression algorithm?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Delete intermediate files
         #        -> Yes
         ##########################################################
         1)
            confound_cleanup[${cxt}]="Y"
            echo "Delete intermediate files: ${confound_cleanup[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> No
         ##########################################################
         2)
            confound_cleanup[${cxt}]="N"
            echo "Delete intermediate files: ${confound_cleanup[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> HELP
         ##########################################################
         *)
            echo ""
            echo -e "${CYA}XCP modules often produce numerous intermediate "
            echo "temporary files and images during the course of "
            echo "an analysis. In many cases, these temporary "
            echo "files are undesirable and unnecessarily consume "
            echo "disk space. If cleanup is enabled, any files "
            echo "stamped as temporary will be deleted when a module "
            echo "successfully runs to completion. If a module "
            echo "fails to detect the output that it expects, then "
            echo "temporary files will be retained to facilitate "
            echo -e "error diagnosis.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
      
   ################################################################
   # USER: Reset to default parameters
   ################################################################
   14)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Default parameters reset."
      source ${XCPEDIR}/modules/confound/confound.def $cxt
      break
      ;;
      
   ################################################################
   # USER: All parameters are correct
   ################################################################
   15)
      xst1=1
      break
      ;;
      
   *)
      echo -e "${RED}Invalid option specified. Enter the number"
      echo -e "corresponding to the appropriate option.${RCL}"
      ;;
   esac
done
done


###################################################################
# write parameters to design file
###################################################################
echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
echo -e "${CYA}Writing user specifications to design file...${RCL}"

echo "" >> $design
echo "###################################################################" >> $design
echo "# ${cxt} CONFOUND" >> $design
echo "###################################################################" >> $design
echo "" >> $design

echo "confound_rp[${cxt}]=${confound_rp[${cxt}]}" >> $design
echo "confound_rms[${cxt}]=${confound_rms[${cxt}]}" >> $design
echo "confound_gm[${cxt}]=${confound_gm[${cxt}]}" >> $design
echo $(${XCPEDIR}/utils/genpath confound_gm_path[${cxt}]=${confound_gm_path[${cxt}]} $path_cohort $xsubj_idx $KEEPNUM) >> $design
echo "confound_gm_val[${cxt}]=${confound_gm_val[${cxt}]}" >> $design
echo "confound_gm_ero[${cxt}]=${confound_gm_ero[${cxt}]}" >> $design
echo "confound_wm[${cxt}]=${confound_wm[${cxt}]}" >> $design
echo $(${XCPEDIR}/utils/genpath confound_wm_path[${cxt}]=${confound_wm_path[${cxt}]} $path_cohort $xsubj_idx $KEEPNUM) >> $design
echo "confound_wm_val[${cxt}]=${confound_wm_val[${cxt}]}" >> $design
echo "confound_wm_ero[${cxt}]=${confound_wm_ero[${cxt}]}" >> $design
echo "confound_csf[${cxt}]=${confound_csf[${cxt}]}" >> $design
echo $(${XCPEDIR}/utils/genpath confound_csf_path[${cxt}]=${confound_csf_path[${cxt}]} $path_cohort $xsubj_idx $KEEPNUM) >> $design
echo "confound_csf_val[${cxt}]=${confound_csf_val[${cxt}]}" >> $design
echo "confound_csf_ero[${cxt}]=${confound_csf_ero[${cxt}]}" >> $design
echo "confound_gsr[${cxt}]=${confound_gsr[${cxt}]}" >> $design
echo "confound_cc[${cxt}]=${confound_cc[${cxt}]}" >> $design
echo "confound_past[${cxt}]=${confound_past[${cxt}]}" >> $design
echo "confound_dx[${cxt}]=${confound_dx[${cxt}]}" >> $design
echo "confound_sq[${cxt}]=${confound_sq[${cxt}]}" >> $design
echo "confound_custom[${cxt}]=${confound_custom[${cxt}]}" >> $design
echo "confound_rerun[${cxt}]=${confound_rerun[${cxt}]}" >> $design
echo "confound_cleanup[${cxt}]=${confound_cleanup[${cxt}]}" >> $design
