#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# initialisation script for structural module
###################################################################

###################################################################
# global constants
###################################################################
readonly POSINT='^[0-9]+$'
readonly INT='^-?[0-9]+$'
readonly POSNUM='^[0-9]+([.][0-9]+)?$'
readonly NUM='^-?[0-9]+([.][0-9]+)?$'
readonly ALPHA='^[A-Z]+$'
readonly ALLOWED="-ACT-ABF-ABE-FBE-"
readonly RED='\033[0;31m'
readonly CYA='\033[0;36m'
readonly LGR='\033[0;37m'
readonly RCL='\033[0m'

###################################################################
# If prompted for information, then return...
###################################################################
if [[ "$1" == "INFO" ]] ||  [[ "$1" == "info" ]]
   then
   echo ""
   echo -e "${CYA}PStructural${RCL}:"
   echo "This module will execute the ANTsCT pipeline"
   echo "with customiziable optioins for brain extraction and bias field correction"
   echo ""
   exit 0
fi
###################################################################
# Inputs:
# -d : design file
# -c : context in pipeline
# -o : old design file (optional)
###################################################################
while getopts "d:c:o:" OPTION
   do
   case $OPTION in
   d)
      design=${OPTARG}
      ;;
   o)
      old_design=${OPTARG}
      ;;
   c)
      cxt=${OPTARG}
      ! [[ ${cxt} =~ $POSINT ]] && ${XCPEDIR}/xcpModusage ini && exit
      ;;
   *)
      ${XCPEDIR}/xcpModusage ini
      exit
   esac
done
shift $((OPTIND-1))

[[ -z ${design} ]] && ${XCPEDIR}/xcpModusage ini && exit

source ${XCPEDIR}/modules/prestats/prestats.def $cxt
buffer=$design
[[ ! -z "${old_design}" ]] && source ${old_design}
design=$buffer
source $design

###################################################################
# The ugly while loop is necessary for the select options to update
# correctly
###################################################################
xst1=0
while [[ "$xst1" == "0" ]]
do

echo ""; echo ""
echo -e "${RED}______________________________________________________________${RCL}"
echo "M${cxt}"; echo ""; echo ""
echo -e "Welcome to ${RED}structural${RCL} initialisation for the XCP Engine."
echo "Select a parameter to define."
echo -e "After selecting an item, enter ${RED}?${RCL} for additional information."

select option in \
   "ANTsCT pipeline extraction prior weight: ${EXTRACTION_PRIOR[${cxt}]}" \
   "N4 convergence criteria: ${N4_CONVERGENCE[${cxt}]}" \
   "N4 Shrink factor: ${N4_SHRINK_FACTOR[${cxt}]}" \
   "N4 spline parameter: ${N4_SPLINE_PARAMS[${cxt}]}" \
   "Re-run: ${structural_rerun[${cxt}]}" \
   "Delete intermediate files: ${structural_cleanup[${cxt}]}" \
   "Processing order: ${structural_process[${cxt}]}" \
   "Reset to default parameters." \
   "All parameters are correct."
   do
   case $REPLY in
   
   ################################################################
   # USER: Extraction prior weight
   ################################################################
   1)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Select the prior weight to use: "\
            -e -i ${EXTRACTION_PRIOR[${cxt}]} buffer
         if [[ $buffer =~ $NUM ]]
            then
            EXTRACTION_PRIOR[${cxt}]=$buffer
            echo "Prior weight: ${EXTRACTION_PRIOR[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "${CYA}The wieght of the prior determines how aggresive"
	    echo -e "of a threshold should be applied to the soft segmentation"
	    echo -e "brain mask for the ANTsCT pipeline."
	    echo -e "A lower value (<.2) will result in a more lenient extraction."
            echo ""
            echo "The input must be an decimal between 0-1."
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: N4 convergence criteria
   ################################################################
   2)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Select the N4 convergence criteria to use: "\
            -e -i ${N4_CONVERGENCE[${cxt}]} buffer
         if [[ ! -z $buffer ]]
            then
            N4_CONVERGENCE[${cxt}]=$buffer
            echo "Convergence criteria to use: ${N4_CONVERGENCE[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "convergence threshold—quantity determined"
	    echo -e "by the coefficient of variation of the"
	    echo -e "ratio of the intensity values between subsequent field estimates"
            echo ""
            echo -e "The input specifies both the number of iterations to run per repition and"
	    echo -e "the convergence threshold to apply to stop before all iterations are run through."
            echo -e "Iterations should be seperated by a x."
	    echo -e "The convergence threshold should be 0.1 or less, smaller values require less variation"
	    echo -e "between "
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: N4 shrink factor
   ################################################################
   3)
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Select the N4 shrink factor to use: "\
            -e -i ${N4_SHRNK_FACTOR[${cxt}]} buffer
         if [[ $buffer =~ $NUM ]]
            then
            N4_SHRNK_FACTOR[${cxt}]=$buffer
            echo "N4 shrink factor to use: ${N4_SHRNK_FACTOR[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "A value used to downsample the image info isotropic voxels."
	    echo -e "Larger values will lead to faster bias field estimation and correction."
	    echo  ""
            echo -e "The shrink factor should be a positive integer"
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: N4 spline parameter
   ################################################################  
   4)
     xst2=0
     while [[ "$xst2" == "0" ]]
      do
        echo "";echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Select the N4 shrink factor to use: "\  
            -e -i  ${N4_SPLINE_PARAMS[${cxt}]} buffer 
         if [[ ! -z $buffer ]]
            then
            N4_SPLINE_PARAMS[${cxt}]=$buffer
            echo "N4 Spline paramter to use: ${N4_SPLINE_PARAMS[${cxt}]}"
            xst2=1
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "N4_SPLINE_PARAMS identifies the spline value in the "
	    echo -e "B-spline least-squares fitting procedure. More specifically "
	    echo -e "this value defines the distance between the knots defining the B-spline mesh."
            echo -e "Higher field strengths tend to have lower values. Larger field strength scanners should"
            echo -e "have lower values."
	    echo -e ""
            echo -e ""
	    echo -e "The B Spline paramter should be an integer"
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: Re-run
   ################################################################
   5)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to RE-RUN any completed steps?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Re-run
         #        -> Yes
         ##########################################################
         1)
            structural_rerun[${cxt}]="Y"
            echo "Re-run: ${structural_rerun[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Re-run
         #        -> No
         ##########################################################
         2)
            structural_rerun[${cxt}]="N"
            echo "Re-run: ${structural_rerun[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Re-run
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Re-run
         #        -> HELP
         ##########################################################
         *)
            echo -e "${CYA}"
            echo "Ordinarily, the XCP modules will detect whether "
            echo "a particular analysis has run to completion "
            echo "before beginning it. If re-running is disabled, "
            echo "then the XCP module will immediately skip to "
            echo "the next stage of analysis. Otherwise, any "
            echo "completed analyses will be repeated."
            echo -e "${RCL}"
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
   ################################################################
   # USER: Delete intermediate files
   ################################################################
   6)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Do you wish to DELETE any outputs of"
      echo "INTERMEDIATE steps in the prestats algorithm?"
      select option in \
         "Yes" \
         "No"
         do
         case $REPLY in
         ##########################################################
         # USER: Delete intermediate files
         #        -> Yes
         ##########################################################
         1)
            structural_cleanup[${cxt}]="Y"
            echo "Delete intermediate files: ${structural_cleanup[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> No
         ##########################################################
         2)
            structural_cleanup[${cxt}]="N"
            echo "Delete intermediate files: ${structural_cleanup[${cxt}]}"
            break
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> MENU
         ##########################################################
         m)
            break 2
            ;;
         ##########################################################
         # USER: Delete intermediate files
         #        -> HELP
         ##########################################################
         *)
            echo ""
            echo -e "${CYA}XCP modules often produce numerous intermediate "
            echo "temporary files and images during the course of "
            echo "an analysis. In many cases, these temporary "
            echo "files are undesirable and unnecessarily consume "
            echo "disk space. If cleanup is enabled, any files "
            echo "stamped as temporary will be deleted when a module "
            echo "successfully runs to completion. If a module "
            echo "fails to detect the output that it expects, then "
            echo "temporary files will be retained to facilitate "
            echo -e "error diagnosis.${RCL}"
            echo ""
            echo "Select a valid option: [1|2]"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
            echo ""; echo ""
            echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
            ;;
         esac
      done
      break
      ;;
   ################################################################
   # USER: Processing order
   ################################################################
   7)
      #############################################################
      # If you wish to add a new subroutine/step to preprocessing,
      # make sure you edit it into the constant $ALLOWED at the
      # beginning of the script.
      #############################################################
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Specify the order in which you would like to run"
      echo "structural processing."
      echo ""
      echo "The structural order should be a string of"
      echo "concatenated three-character substrings. Each"
      echo "substring encodes a particular processing"
      echo "step; this feature should primarily be used to"
      echo "selectively run only parts of the preprocessing"
      echo "algorithm."
      echo ""
      echo "Permitted codes include:"
      echo -e "${CYA} *${RCL} ACT: ANTs Cortical Thickness Pipeline"
      echo -e "${CYA} *${RCL} ABF: ANTs Bias Field Correction"
      echo -e "${CYA} *${RCL} ABE: ANTs Brain Extraction"
      echo -e "${CYA} *${RCL} FBE: FSL BET Brain Extraction"
      echo ""
      echo "For instance, FBEACT will perform"
      echo "BET and then use the output of BET as the brain extracted image for ANTsCT"
      echo "ACT should only come as the last step"
      xst2=0
      while [[ "$xst2" == "0" ]]
         do
         echo ""; echo ""
         echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
         echo ""
         read -p "Specify the PREPROCESSING ORDER: "\
            -e -i ${structural_process[${cxt}]} buffer
         if [[ $buffer =~ $ALPHA ]]
            then
            echo "Verifying code is valid: $buffer"
            rem=$buffer
            while [[ "${#rem}" -gt "0" ]]
               do
               cur=${rem:0:3}
               rem=${rem:3:${#rem}}
               if [[ "$ALLOWED" != *"-${cur}-"* ]]
                  then
                  echo "Disallowed code: $cur"
                  echo "Code for preprocessing order is invalid."
                  echo "Please specify a different code."
                  rem=""
                  cur=FALSE
               fi
            done
            if [[ "$cur" != "FALSE" ]]
               then
               structural_process[${cxt}]=$buffer
               xst2=1
               echo "Processing order validated"
               echo "Processing order: ${structural_process[${cxt}]}"
            fi
         elif [[ "${buffer}" == "m" ]]
            then
            break 2
         else
            echo ""
            echo -e "${CYA}The preprocessing order should be a string of"
            echo "concatenated three-character substrings. Each"
            echo "substring encodes a particular processing"
            echo "step; this feature should primarily be used to"
            echo "selectively run only parts of the preprocessing"
            echo "algorithm."
            echo ""
            echo "Permitted codes include:"
            echo "Permitted codes include:"
            echo -e "${CYA} *${RCL} ACT: ANTs Cortical Thickness Pipeline"
            echo -e "${CYA} *${RCL} ABF: ANTs Bias Field Correction"
            echo -e "${CYA} *${RCL} ABE: ANTs Brain Extraction"
            echo -e "${CYA} *${RCL} FBE: FSL BET Brain Extraction"
            echo ""
            echo "For instance, FBEACT will perform"
            echo "BET and then use the output of BET as the brain extracted image for ANTsCT"
            echo "ACT should only come as the last step"
            echo -e ""
            echo -e "ENTER ${RED}m${RCL} TO RETURN TO THE MAIN MODULE MENU."
         fi
      done
      break
      ;;
   ################################################################
   # USER: Reset default parameters
   ################################################################
   8)
      echo ""; echo ""
      echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
      echo ""
      echo "Default parameters reset."
      source ${XCPEDIR}/modules/structural/structural.def $cxt
      break
      ;;
      
   ################################################################
   # USER: All parameters are correct
   ################################################################
   9)
      xst1=1
      break
      ;;
      
   *)
      echo -e "${RED}Invalid option specified. Enter the number"
      echo -e "corresponding to the appropriate option.${RCL}"
      $0 INFO
      ;;
      
   esac
done
done


###################################################################
# write parameters to design file
###################################################################
echo -e "${CYA}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${RCL}"
echo -e "${CYA}Writing user specifications to design file...${RCL}"

echo "" >> $design
echo "###################################################################" >> $design
echo "# ${cxt} STRUCTURAL" >> $design
echo "###################################################################" >> $design
echo "" >> $design
echo "EXTRACTION_PRIOR[${CXT}]=${EXTRACTION_PRIOR[${cxt}]}"
echo "N4_CONVERGENCE[${CXT}]=${N4_CONVERGENCE[${cxt}]}"
echo "N4_SHRINK_FACTOR[${cxt}]=${N4_SHRINK_FACTOR[${cxt}]}"
echo "N4_SPLINE_PARAMS[${cxt}]=${N4_SPLINE_PARAMS[${cxt}]}"
echo "structural_rerun[${cxt}]=${structural_rerun[${cxt}]}"
echo "structural_cleanup[${cxt}]=${structural_cleanup[${cxt}]}"
echo "structural_process[${cxt}]=${structural_process[${cxt}]}"

