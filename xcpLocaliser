#!/usr/bin/env bash


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# SPECIFIC MODULE HEADER
# This module localises inputs to the XCP engine
###################################################################
mod_name='XCP ENGINE LOCALISER'
mod_head=${XCPEDIR}/core/CONSOLE_MODULE_RC
cxt=0

###################################################################
# GENERAL MODULE HEADER
###################################################################
source ${XCPEDIR}/core/parseArgsLocaliser

################################################################### 
# Localise design file
################################################################### 
echo "Localising design file..."

###################################################################
# Parse subject
###################################################################
echo " * Parsing subject identifiers"
   source ${XCPEDIR}/core/parseSubject ${subject}
   
###################################################################
# Create output directory
###################################################################
echo " * Creating output directory"
   mkdir -p $out

###################################################################
# Evaluate subject-specific variables
###################################################################
echo " * Evaluating subject variables"
   design_local=$(eval "echo -e \"`<${design}`\""\
      |sed s@img=@img\[${subjidx}\]=@g\
      |sed s@struct=@struct\[${subjidx}\]=@g)
      
###################################################################
# Write local design file
###################################################################
echo " * Writing design for current subject"
   design_local_path=${out}/${prefix}.dsn
   rm -f $design_local_path
   echo "${design_local}"                       >> ${design_local_path}
   cat ${XCPEDIR}/core/DESIGN_VARHEAD_OUTPUT    >> ${design_local_path}
   eval "echo -e \"${mod_out}\""                >> ${design_local_path}
   echo "subjidx=$subjidx"                      >> ${design_local_path}
   echo "design_local=${design_local_path}"     >> ${design_local_path}

###################################################################
# Write path to derivative image index
###################################################################
echo " * Writing path to derivative map index"
   aux_img_path=${out}/${prefix}_derivsNative
   rm -f $aux_img_path
   echo "aux_imgs[${subjidx}]=${aux_img_path}"  >> ${design_local_path}

###################################################################
# Write path to audit file, and write information
# to the audit file
###################################################################
echo " * Priming analytic audit"
   audit=${out}/${prefix}_logs/${prefix}_audit
   rm -f ${audit}
   echo "audit=${audit}"                        >> ${design_local_path}
   
   ################################################################
   # Prepare the audit header, which will contain information
   # about the processing status of the current subject
   ################################################################
   source ${XCPEDIR}/core/getIdentifiers
   id_vals=$(echo ${id_val[@]}|sed s@' '@','@g)
   id_vars=$(echo ${id_var[@]}|sed s@' '@','@g)
   audit_var=${id_vars},localiser,${pipeline}
   
   ################################################################
   # Write the contents of the audit file.
   ################################################################
   num_mods=$(( $(${XCPEDIR}/core/numInstances ',' ${pipeline}) + 2 ))
   audit_val=${id_vals}$(printf ',0%.0s' $(seq 1 ${num_mods}))
   echo "${audit_var}"                          >> ${audit}
   echo "${audit_val}"                          >> ${audit}

###################################################################
# Write path to index of quality variables
###################################################################
echo " * Priming quality assessment"
   quality=${out}/${prefix}_quality.csv
   rm -f ${quality}
   echo "quality=${quality}"                    >> ${design_local_path}
   echo "${id_vars}"                            >> ${quality}
   echo "${id_vals}"                            >> ${quality}

###################################################################
# Ensure that all images are present
###################################################################
source ${XCPEDIR}/core/imgChk

###################################################################
# Localise the image.
# * If necessary, convert it to NIFTI_GZ format.
# * If necessary, convert it to RPI orientation.
###################################################################
echo "
Localising image..."
source ${XCPEDIR}/core/imgLocalise

###################################################################
# Enter audit information for the current subject
###################################################################
echo "
Updating audit..."
source ${XCPEDIR}/core/auditComplete

echo "

Localiser complete"
